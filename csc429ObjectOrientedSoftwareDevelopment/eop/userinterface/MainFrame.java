// tabs=4
//************************************************************
//	COPYRIGHT 2010 Sandeep Mitra and students, The
//    College at Brockport, State University of New York. -
//	  ALL RIGHTS RESERVED
//
// This file is the product of The College at Brockport and cannot
// be reproduced, copied, or used in any shape or form without
// the express written consent of The College at Brockport.
//************************************************************
//
// specify the package
package userinterface;

//system imports
import javax.swing.*;

import java.awt.*;
import java.net.*;
import java.awt.event.ComponentListener;
import java.awt.event.ComponentEvent;

//=============================================================
//The main frame for the Boy Scout Tree Sales application.
//All sub-panels (Views) are inside this one frame only.
//==============================================================
public class MainFrame extends JFrame
implements ComponentListener
{
	public static Color BK_COLOR = new Color(200, 200, 200);
	public static Color SEL_COLOR = new Color(225, 225, 225);
	private LogoPanel logoPanel;
	private JPanel copyRightPanel;

	// data members
	//private JPanel mainPanel;	// primary panel placed in the frame

	private Dimension frameSize;	// frame size, prevents reset

	// the only instance allowed, null in the beginning
	private static MainFrame myInstance = null;

	private boolean sizeSet; // Indicates if frame size was set

	//-------------------------------------------------------------
	// class constructor may be called only from within this class,
	// follows the idea of Singleton pattern
	//-------------------------------------------------------------
	private MainFrame (String title)
	{
		super( title );

		// change the window's default Java image to custom Christmas Tree image
		//URL myurl = this.getClass().getResource( "tree.jpg" );
		//	Toolkit kit = this.getToolkit();

		//super.setIconImage( kit.getImage( myurl ) );

		// in case the program runs in Eclipse, not in jar uncomment the code below
		// change the window's default Java image to custom Christmas Tree image
		super.setIconImage( new ImageIcon ( "mcardlesheader3.jpg" ).getImage() );

		super.setLayout(new BorderLayout () );


		// This title is the logo panel that stays same for the
		// duration of the entire program. Component at position (0)
		super.add( createTitle(), BorderLayout.NORTH );

		// This is the Copyright notice, that is the same for all the views, hence
		// once it is installed into the main frame it should not be removed
		// This is Frame Component at position (1)
		copyRightPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));

		copyRightPanel.setBackground(Color.white);
		copyRightPanel.add(new JLabel("Copyright (c) 2014: Department of Computer Science, The College at Brockport"));
		
		super.add( copyRightPanel, BorderLayout.SOUTH );


		// This panel is a "dummy" panel, which will be replaced by
		// an actual panel, i.e. by a View that is displayed to the user
		// This is Frame Component at position ( 2 ), which will be removed
		// in swapToPanelView method and replaced with the view needed.
		JPanel empty = new JPanel ( );
		empty.setBackground( Color.pink );
		super.add( empty, BorderLayout.CENTER );

		super.setVisible( true );

		super.setResizable( false );
		sizeSet = true;

	} // end of the constructor

	//-------------------------------------------------------------
	private JPanel createTitle()
	{
		// instantiate the LogoPanel and return it
		// to the MainFrame constructor
		logoPanel = new LogoPanel("        EOP LIBRARY SYSTEM        ");
		return logoPanel;
	}
	public LogoPanel getLogoPanel(){
		return logoPanel;
	}
	//----------------------------------------------------------------
	// Singleton Pattern use: the MainFrame is instantiated just once
	// All the views/panels go inside this frame instance
	//----------------------------------------------------------------
	public static MainFrame getInstance (String title)
	{
		if (myInstance == null)
		{
			myInstance = new MainFrame(title);
		}

		return myInstance;
	}

	//----------------------------------------------------------
	public static JFrame getInstance ()
	{
		if (myInstance == null)
		{
			myInstance = new MainFrame("");
		}

		return myInstance;
	}

	/**
	 * Prevents resize on frame
	 *
	 * @param	e	The Component Event generated by the resize request
	 */
	//--------------------------------------------------------------
	public void componentResized(ComponentEvent e)
	{
//		if (sizeSet == false)
//		{
//			sizeSet = true; // allow first one in (from pack call), and save size
//			frameSize = getSize();
//		}
//		else
//		{
//			// user tried to resize, set it back
//			setSize(frameSize);
//			pack();
//			validate();
//		}
	}

	/**  Part of the Component listener interface (don't care) */
	//--------------------------------------------------------------
	public void componentHidden(ComponentEvent e)
	{
		// dont care about this one
	}

	/**  Part of the Component listener interface (don't care) */
	//--------------------------------------------------------------
	public void componentMoved(ComponentEvent e)
	{
		// dont care about this one
	}

	/**  Part of the Component listener interface (don't care) */
	//--------------------------------------------------------------
	public void componentShown(ComponentEvent e)
	{
		// dont care about this one
	}

	public JPanel getCopyRightPanel() {
		return copyRightPanel;
	}


}




